{"version":3,"file":"static/js/478.419ab509.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Form/Form.styled.js","components/Form/Form.js","pages/Contacts/Contacts.styled.js","pages/Contacts/ContactCard.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  color: white;\n  margin-top: 10px;\n`;\nexport const FilterInput = styled.input`\n  max-width: 200px;\n  border: 2px solid gray;\n  border-radius: 5px;\n  padding: 5px 10px;\n  color: black;\n`;\n","import { useSelector } from 'react-redux';\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const onChangeFilter = e => {\n    const inputValue = e.target.value;\n    dispatch(filter(inputValue));\n  };\n\n  return (\n    <div>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput type=\"text\" value={value} onChange={onChangeFilter} />\n      </FilterLabel>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport {\n  ErrorMessage as FormErrorMessage,\n  Form as FormStyle,\n  Field as Input,\n} from 'formik';\n\nexport const ErrorMessage = styled(FormErrorMessage)`\n  display: block;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const Form = styled(FormStyle)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 900px;\n`;\nexport const FormLabel = styled.label`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 14px;\n  font-weight: 500;\n`;\nexport const Field = styled(Input)`\n  border: 2px solid gray;\n  border-radius: 5px;\n  padding: 5px;\n  max-width: 300px;\n  font-size: 14px;\n  color: black;\n`;\nexport const FormButton = styled.button`\n  font-size: 14px;\n  font-weight: 500;\n  border: 2px solid gray;\n  border-radius: 5px;\n  padding: 10px;\n  max-width: 200px;\n  background-color: white;\n  &:hover {\n    cursor: pointer;\n    background-color: orange;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport * as Yup from 'yup';\nimport {\n  ErrorMessage,\n  Form,\n  FormLabel,\n  Field,\n  FormButton,\n} from './Form.styled';\n\nexport const ContactForm = () => {\n  const notify = () =>\n    toast.success('Contact added.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    });\n  const contactsArray = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const SignupSchema = Yup.object().shape({\n    name: Yup.string().required(\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n    number: Yup.number().required(\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n  });\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={(values, actions) => {\n        const { name, number } = values;\n        const newContact = {\n          name,\n          number,\n        };\n\n        const find = contactsArray.find(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        );\n        if (!find) {\n          dispatch(addContact(newContact));\n          actions.resetForm();\n          notify();\n        } else {\n          toast.error('This contact is already in the phone book.', {\n            position: 'top-center',\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'light',\n          });\n        }\n      }}\n      validationSchema={SignupSchema}\n    >\n      <Form>\n        <FormLabel>\n          Name\n          <Field\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            required\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            required\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormLabel>\n        <FormButton type=\"submit\">Add contacts</FormButton>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListContacts = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding-left: 60px;\n  gap: 10px;\n  margin-top: 10px;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  border: 2px solid gray;\n  border-radius: 10px;\n  padding: 10px;\n`;\nexport const Delete = styled.button`\n  font-size: 14px;\n  background-color: white;\n  border: 2px solid grey;\n  border-radius: 5px;\n  padding: 2px 10px;\n  &:hover {\n    cursor: pointer;\n    background-color: orange;\n  }\n`;\nexport const Text = styled.p`\n  color: white;\n  display: flex;\n  gap: 5px;\n  align-items: center;\n`;\nexport const Section = styled.section`\n  padding-left: 80px;\n`;\n","import { ListItem, Text } from './Contacts.styled';\nimport { useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/contacts/contactsOperations';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport * as selectors from '../../redux/selectors';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Button } from '@chakra-ui/react';\nimport { DeleteIcon, PhoneIcon, StarIcon } from '@chakra-ui/icons';\n\nconst notify = () =>\n  toast.success('The contact has been deleted.', {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n\nconst ContactCard = () => {\n  const contacts = useSelector(selectors.selectContacts);\n  const isLoading = useSelector(selectors.selectIsLoading);\n  const filter = useSelector(selectors.selectFilter);\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return visibleContacts.map(({ name, id, number }) => {\n    return (\n      <ListItem key={id}>\n        <Text><StarIcon/>{name}:</Text>\n        <Text><PhoneIcon/>{number}</Text>\n        <Button\n          display=\"flex\"\n          gap=\"2px\"\n          size=\"xs\"\n          _hover={{ bg: 'red.500', color: 'white' }}\n          type=\"button\"\n          onClick={() => {\n            dispatch(deleteContact(id));\n            if (!isLoading) {\n              notify();\n            }\n          }}\n        >\n          <DeleteIcon />\n          Delete\n        </Button>\n      </ListItem>\n    );\n  });\n};\n\nexport default ContactCard;\n","import { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/Form/Form';\nimport { Flex, Heading } from '@chakra-ui/react';\nimport ContactCard from './ContactCard';\nimport { Section } from './Contacts.styled';\n\nconst Contacts = () => {\n  return (\n    <Section>\n      <Heading marginBottom={'12px'} color=\"white\">\n        Contacts\n      </Heading>\n      <ContactForm />\n      <Filter />\n      <Flex gap=\"10px\" marginTop=\"10px\" wrap=\"wrap\">\n        <ContactCard />\n      </Flex>\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["FilterLabel","styled","FilterInput","Filter","value","useSelector","state","filter","dispatch","useDispatch","type","onChange","e","inputValue","target","ErrorMessage","FormErrorMessage","Form","FormStyle","FormLabel","Field","Input","FormButton","ContactForm","contactsArray","selectContacts","SignupSchema","Yup","shape","name","required","number","initialValues","onSubmit","values","actions","newContact","find","contact","toLowerCase","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContact","resetForm","validationSchema","pattern","component","ListItem","Text","Section","contacts","selectors","isLoading","visibleContacts","includes","useEffect","fetchContacts","map","id","display","gap","size","_hover","bg","color","onClick","deleteContact","marginBottom","marginTop","wrap"],"sourceRoot":""}